{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CURRENT, FILTER_CONTACTS, CLEAR_FILTER } from '../types'; // set up Contact state with some initial state\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Frank White',\n      email: 'fwhite@gmail.com',\n      phone: '760-222-2222',\n      type: 'professional'\n    }, {\n      id: 2,\n      name: 'Biggies Smalls',\n      email: 'Bsmalls@gmail.com',\n      phone: '777-777-7777',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Jimmy Johnson',\n      email: 'jjohnson@gmail.com',\n      phone: '222-222-2222',\n      type: 'professional'\n    }]\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Actions\n  // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n  // Set Current Contact\n  // Clear Current Contact\n  // Update Contact\n  // Filter Contacts\n  // Clear filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","addContact","contact","v4","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP,C,CAUA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,kBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,gBAFV;AAGIC,MAAAA,KAAK,EAAE,mBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC,eAFT;AAGIC,MAAAA,KAAK,EAAE,oBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM;AADO,GAArB;AA0BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAApC,CA3B0B,CA6B1B;AACA;;AACA,QAAMS,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACR,EAAR,GAAad,IAAI,CAACuB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEf,WAAR;AAAqBqB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACH,GAHD,CA/B0B,CAoC1B;AAEA;AAEA;AAEA;AAEA;AAEA;;;AAGA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AAACT,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AAAjB,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMF,KAAK,CAACc,QAHZ,CADJ;AAOH,CAxDD;;AA0DA,eAAef,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CURRENT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\n// set up Contact state with some initial state\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id:1,\n                name: 'Frank White',\n                email: 'fwhite@gmail.com',\n                phone: '760-222-2222',\n                type: 'professional'\n            },\n            {\n                id:2,\n                name: 'Biggies Smalls',\n                email: 'Bsmalls@gmail.com',\n                phone: '777-777-7777',\n                type: 'personal'\n            },\n            {\n                id:3,\n                name:'Jimmy Johnson',\n                email: 'jjohnson@gmail.com',\n                phone: '222-222-2222',\n                type: 'professional'\n            }\n        ]\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Actions\n    // Add Contact\n    const addContact = contact => {\n        contact.id = uuid.v4();\n        dispatch({ type: ADD_CONTACT, payload: contact })\n    }\n\n    // Delete Contact\n\n    // Set Current Contact\n\n    // Clear Current Contact\n\n    // Update Contact\n\n    // Filter Contacts\n\n    // Clear filter\n\n\n    return (\n        <ContactContext.Provider \n        value={{contacts: state.contacts}}\n        >\n            { props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}