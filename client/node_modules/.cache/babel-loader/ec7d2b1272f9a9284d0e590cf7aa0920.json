{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types'; // set up Auth state with some initial state\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Actions\n  // Load user: checking what user is logged in\n  // Register User: sign up and get token back\n  // Login User\n  // Logout\n  // Clear errors\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,QASO,UATP,C,CAWA;;AACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CATuB,CAWvB;AACA;AAEA;AAEA;AAEA;AAEA;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACJC,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADT;AAEJG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFnB;AAGJC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHX;AAIJC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJR;AAKJC,MAAAA,KAAK,EAAEC,KAAK,CAACD;AALT,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASMR,KAAK,CAACW,QATZ,CADJ;AAaH,CAnCD;;AAqCA,eAAeZ,SAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types';\n\n// set up Auth state with some initial state\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        user: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    // Actions\n    // Load user: checking what user is logged in\n\n    // Register User: sign up and get token back\n\n    // Login User\n\n    // Logout\n\n    // Clear errors\n\n    return (\n        <AuthContext.Provider \n        value={{ \n           token: state.token,\n           isAuthenticated: state.isAuthenticated,\n           loading: state.loading,\n           user: state.user,\n           error: state.error\n        }}\n        >\n            { props.children}\n        </AuthContext.Provider>\n    )\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}