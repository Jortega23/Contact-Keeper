{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CURRENT, FILTER_CONTACTS, CLEAR_FILTER } from '../types'; // set up Contact state with some initial state\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Frank White',\n      email: 'fwhite@gmail.com',\n      phone: '760-222-2222',\n      type: 'professional'\n    }, {\n      id: 2,\n      name: 'Biggies Smalls',\n      email: 'Bsmalls@gmail.com',\n      phone: '777-777-7777',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Jimmy Johnson',\n      email: 'jjohnson@gmail.com',\n      phone: '222-222-2222',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Actions\n  // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CURRENT,\n      payload: contact\n    });\n  }; // Filter Contacts\n  // Clear filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA0B,MAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP,C,CAUA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,kBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,gBAFV;AAGIC,MAAAA,KAAK,EAAE,mBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC,eAFT;AAGIC,MAAAA,KAAK,EAAE,oBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM,CADO;AAwBjBC,IAAAA,OAAO,EAAE;AAxBQ,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA5B0B,CA8B1B;AACA;;AACA,QAAMU,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,EAAjB;AACAqB,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEf,WAAR;AAAqBqB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACH,GAHD,CAhC0B,CAqC1B;;;AACA,QAAME,aAAa,GAAGX,EAAE,IAAI;AACxBO,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEd,cAAP;AAAuBoB,MAAAA,OAAO,EAAEV;AAAhC,KAAD,CAAR;AACH,GAFD,CAtC0B,CA0C1B;;;AACA,QAAMY,UAAU,GAAGH,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEb,WAAP;AAAoBmB,MAAAA,OAAO,EAACD;AAA5B,KAAD,CAAR;AACH,GAFD,CA3C0B,CA+C1B;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACH,GAFD,CAhD0B,CAoD1B;;;AACA,QAAMsB,aAAa,GAAGL,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEX,cAAP;AAAuBiB,MAAAA,OAAO,EAAED;AAAhC,KAAD,CAAR;AACH,GAFD,CArD0B,CAyD1B;AAEA;;;AAGA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHV,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADb;AAEHM,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFZ;AAGHG,MAAAA,UAHG;AAIHG,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA,YANG;AAOHC,MAAAA;AAPG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWMjB,KAAK,CAACkB,QAXZ,CADJ;AAeH,CA7ED;;AA+EA,eAAenB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid} from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CURRENT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\n// set up Contact state with some initial state\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id:1,\n                name: 'Frank White',\n                email: 'fwhite@gmail.com',\n                phone: '760-222-2222',\n                type: 'professional'\n            },\n            {\n                id:2,\n                name: 'Biggies Smalls',\n                email: 'Bsmalls@gmail.com',\n                phone: '777-777-7777',\n                type: 'personal'\n            },\n            {\n                id:3,\n                name:'Jimmy Johnson',\n                email: 'jjohnson@gmail.com',\n                phone: '222-222-2222',\n                type: 'professional'\n            }\n        ],\n        current: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Actions\n    // Add Contact\n    const addContact = contact => {\n        contact.id = uuid();\n        dispatch({ type: ADD_CONTACT, payload: contact })\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({type: DELETE_CONTACT, payload: id})\n    }\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({type: SET_CURRENT, payload:contact});\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = contact => {\n        dispatch({type: UPDATE_CURRENT, payload: contact });\n    };\n\n    // Filter Contacts\n\n    // Clear filter\n\n\n    return (\n        <ContactContext.Provider \n        value={{ \n            contacts: state.contacts,\n            current: state.current, \n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact\n        }}\n        >\n            { props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}