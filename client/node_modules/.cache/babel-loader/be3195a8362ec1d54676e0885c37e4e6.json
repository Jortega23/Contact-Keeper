{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CURRENT, FILTER_CONTACTS, CLEAR_FILTER } from '../types'; // set up Contact state with some initial state\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Actions\n  // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CURRENT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA0B,MAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP,C,CAUA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACK,cAAD,EAAiBU,YAAjB,CAApC,CAP0B,CAS1B;AACA;;AACA,QAAMM,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACC,EAAR,GAAapB,IAAI,EAAjB;AACAiB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAElB,WAAR;AAAqBmB,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACH,GAHD,CAX0B,CAgB1B;;;AACA,QAAMI,aAAa,GAAGH,EAAE,IAAI;AACxBH,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEjB,cAAP;AAAuBkB,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACH,GAFD,CAjB0B,CAqB1B;;;AACA,QAAMI,UAAU,GAAGL,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEhB,WAAP;AAAoBiB,MAAAA,OAAO,EAACH;AAA5B,KAAD,CAAR;AACH,GAFD,CAtB0B,CA0B1B;;;AACA,QAAMM,YAAY,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACH,GAFD,CA3B0B,CA+B1B;;;AACA,QAAMoB,aAAa,GAAGP,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEd,cAAP;AAAuBe,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACH,GAFD,CAhC0B,CAoC1B;;;AACA,QAAMQ,cAAc,GAAGC,IAAI,IAAI;AAC3BX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEb,eAAR;AAAyBc,MAAAA,OAAO,EAAEM;AAAlC,KAAD,CAAR;AACH,GAFD,CArC0B,CAyC1B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBZ,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEZ;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHI,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADb;AAEHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFZ;AAGHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHb;AAIHG,MAAAA,UAJG;AAKHK,MAAAA,aALG;AAMHC,MAAAA,UANG;AAOHC,MAAAA,YAPG;AAQHC,MAAAA,aARG;AASHC,MAAAA,cATG;AAUHE,MAAAA;AAVG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcMlB,KAAK,CAACmB,QAdZ,CADJ;AAkBH,CAhED;;AAkEA,eAAepB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios'\nimport { v4 as uuid} from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CURRENT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\n// set up Contact state with some initial state\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Actions\n    // Add Contact\n    const addContact = contact => {\n        contact.id = uuid();\n        dispatch({ type: ADD_CONTACT, payload: contact })\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({type: DELETE_CONTACT, payload: id})\n    }\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({type: SET_CURRENT, payload:contact});\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = contact => {\n        dispatch({type: UPDATE_CURRENT, payload: contact });\n    };\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text});\n    }\n\n    // Clear filter\n    const clearFilter = () => {\n        dispatch({type: CLEAR_FILTER});\n    }\n\n    return (\n        <ContactContext.Provider \n        value={{ \n            contacts: state.contacts,\n            current: state.current,\n            filtered: state.filtered, \n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            filterContacts,\n            clearFilter\n        }}\n        >\n            { props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}