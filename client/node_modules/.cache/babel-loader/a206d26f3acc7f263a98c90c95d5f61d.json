{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CURRENT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types'; // set up Contact state with some initial state\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Actions\n  // Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CURRENT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/a/Desktop/GitHub/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios'\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CURRENT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\n// set up Contact state with some initial state\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Actions\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n           const res = await axios.post('/api/contacts', contact, config);\n           dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg})\n        }\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({type: DELETE_CONTACT, payload: id})\n    }\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({type: SET_CURRENT, payload:contact});\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = contact => {\n        dispatch({type: UPDATE_CURRENT, payload: contact });\n    };\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text});\n    }\n\n    // Clear filter\n    const clearFilter = () => {\n        dispatch({type: CLEAR_FILTER});\n    }\n\n    return (\n        <ContactContext.Provider \n        value={{ \n            contacts: state.contacts,\n            current: state.current,\n            filtered: state.filtered, \n            error: state.error,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            filterContacts,\n            clearFilter\n        }}\n        >\n            { props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}